{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\src\\http\\request.js","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\src\\http\\request.js","mtime":1650806895550},{"path":"C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\babel.config.js","mtime":1650801439642},{"path":"C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650810672177},{"path":"C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1650810673128},{"path":"C:\\Users\\Lenovo\\Desktop\\vuecli\\admin\\node_modules\\eslint-loader\\index.js","mtime":1650810668381}],"contextDependencies":[],"result":["import _Message2 from \"element-ui/lib/theme-chalk/message.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Message from \"element-ui/lib/message\";\nimport \"core-js/modules/es7.array.includes\";\n\n/**\r\n * axios二次封装\r\n */\nimport Axios from 'axios';\nimport encConfig from \"./env\";\nvar service = Axios.create({\n  baseURL: encConfig.prod.baseURL,\n  timeout: 5000\n});\nservice.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nservice.interceptors.response.use(function (res) {\n  console.log('res:::', res);\n  var _res$data = res.data,\n      _res$data$meta = _res$data.meta,\n      msg = _res$data$meta.msg,\n      code = _res$data$meta.status,\n      result = _res$data.data;\n  var successCodeArr = [200, 201, 204];\n\n  if (successCodeArr.includes(code)) {\n    _Message({\n      message: msg,\n      type: 'success'\n    });\n\n    if (res.config.url === '/login') {\n      sessionStorage.setItem('token', result.token);\n    }\n\n    return result;\n  }\n\n  _Message({\n    message: msg,\n    type: 'error'\n  });\n\n  return Promise.reject(msg);\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["C:/Users/Lenovo/Desktop/vuecli/admin/src/http/request.js"],"names":["Axios","encConfig","service","create","baseURL","prod","timeout","interceptors","request","use","config","error","Promise","reject","response","res","console","log","data","meta","msg","code","status","result","successCodeArr","includes","message","type","url","sessionStorage","setItem","token"],"mappings":";;;;;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP;AAGA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAE3BC,EAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeD,OAFG;AAG3BE,EAAAA,OAAO,EAAE;AAHkB,CAAb,CAAhB;AAMAJ,OAAO,CAACK,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAACC,MAAD,EAAY;AACV,SAAOA,MAAP;AACD,CAHH,EAIE,UAACC,KAAD,EAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CANH;AAQAT,OAAO,CAACK,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CACE,UAACM,GAAD,EAAS;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACA,kBAGIA,GAAG,CAACG,IAHR;AAAA,iCACEC,IADF;AAAA,MACUC,GADV,kBACUA,GADV;AAAA,MACuBC,IADvB,kBACeC,MADf;AAAA,MAEQC,MAFR,aAEEL,IAFF;AAIA,MAAMM,cAAc,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAvB;;AACA,MAAIA,cAAc,CAACC,QAAf,CAAwBJ,IAAxB,CAAJ,EAAmC;AACjC,aAAQ;AACNK,MAAAA,OAAO,EAAEN,GADH;AAENO,MAAAA,IAAI,EAAE;AAFA,KAAR;;AAKA,QAAIZ,GAAG,CAACL,MAAJ,CAAWkB,GAAX,KAAmB,QAAvB,EAAiC;AAC/BC,MAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCP,MAAM,CAACQ,KAAvC;AACD;;AAED,WAAOR,MAAP;AACD;;AAED,WAAQ;AACNG,IAAAA,OAAO,EAAEN,GADH;AAENO,IAAAA,IAAI,EAAE;AAFA,GAAR;;AAKA,SAAOf,OAAO,CAACC,MAAR,CAAeO,GAAf,CAAP;AACD,CA3BH,EA4BE,UAACT,KAAD,EAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CA9BH;AAiCA,eAAeT,OAAf","sourcesContent":["/**\r\n * axios二次封装\r\n */\r\n\r\nimport Axios from 'axios'\r\nimport encConfig from './env'\r\nimport { Message } from 'element-ui'\r\n\r\nconst service = Axios.create({\r\n\r\n  baseURL: encConfig.prod.baseURL,\r\n  timeout: 5000\r\n})\r\n\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    return config\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nservice.interceptors.response.use(\r\n  (res) => {\r\n    console.log('res:::', res)\r\n    const {\r\n      meta: { msg, status: code },\r\n      data: result\r\n    } = res.data\r\n    const successCodeArr = [200, 201, 204]\r\n    if (successCodeArr.includes(code)) {\r\n      Message({\r\n        message: msg,\r\n        type: 'success'\r\n      })\r\n\r\n      if (res.config.url === '/login') {\r\n        sessionStorage.setItem('token', result.token)\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    Message({\r\n      message: msg,\r\n      type: 'error'\r\n    })\r\n\r\n    return Promise.reject(msg)\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n"]}]}